---
- set_fact:
    ca_dir: '{{ intermediate_ca_dir }}'
    private_key_file: intermediate.key.pem
    certificate_file: '{{ intermediate_certificate_file }}'
    crl_file: intermediate.crl.pem
    policy: policy_loose

- name: create directory structure
  file:
    path: '{{ item }}'
    state: directory
  with_items:
    - '{{ ca_dir }}/certs'
    - '{{ ca_dir }}/crl'
    - '{{ ca_dir }}/csr'
    - '{{ ca_dir }}/newcerts'
    - '{{ ca_dir }}/private'

- name: change permissions
  file:
    path: '{{ ca_dir }}/private'
    mode: 0700

- name: create files
  copy:
    content: '{{ item.content | default }}'
    dest: '{{ item.dest }}'
  with_items:
    - dest: '{{ ca_dir }}/index.txt'
    - content: 1000
      dest: '{{ ca_dir }}/serial'
    - content: 1000
      dest: '{{ ca_dir }}/crlnumber'

- name: create the openssl config file
  template:
    src: openssl.cnf.j2
    dest: '{{ ca_dir }}/openssl.cnf'

- name: create the intermediate key
  command: openssl genrsa -aes256 -out {{ ca_dir }}/private/{{ private_key_file }} 4096
  args:
    creates: '{{ ca_dir }}/private/{{ private_key_file }}'

- name: change permissions for the intermediate key file
  file:
    path: '{{ ca_dir }}/private/{{ private_key_file }}'
    mode: 0400

- name: create a certificate signing request
  command: >
    openssl req -config {{ ca_dir }}/openssl.cnf
    -key {{ ca_dir }}/private/{{ private_key_file }}
    -new -sha256
    -subj '/C=IT/ST=Italy/L=Rome/O=Adriano Di Giovanni/OU=Certificate Authority/CN=Intermediate CA CA/EA=me@adrianodigiovanni.com'
    -out {{ ca_dir }}/csr/intermediate.csr.pem
  args:
    creates: '{{ ca_dir }}/csr/intermediate.csr.pem'

- name: create the intermediate certificate
  command: >
    openssl ca -config {{ root_ca_dir }}/openssl.cnf
      -extensions v3_intermediate_ca
      -days 36135 -notext -md sha256 -batch
      -in {{ ca_dir }}/csr/intermediate.csr.pem
      -out {{ ca_dir }}/certs/{{ certificate_file }}
  args:
    creates: '{{ ca_dir }}/certs/{{ certificate_file }}'

- name: change permissions for the intermediate certificate file
  file:
    path: '{{ ca_dir }}/certs/{{ certificate_file }}'
    mode: 0444

- name: verify the intermediate certificate
  command: openssl x509 -noout -text -in {{ ca_dir }}/certs/{{ certificate_file }}

- name: verify chain of trust
  command: >
    openssl verify -CAfile {{ root_ca_dir }}/certs/{{ root_certificate_file }}
      {{ ca_dir }}/certs/{{ certificate_file }}

- name: create the certificate chain
  shell: cat {{ ca_dir }}/certs/{{ certificate_file }} {{ root_ca_dir}}/certs/{{ root_certificate_file }} > {{ ca_dir }}/certs/ca-chain.cert.pem
  args:
    creates: '{{ ca_dir }}/certs/ca-chain.cert.pem'
